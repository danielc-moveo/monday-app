{"ast":null,"code":"var _jsxFileName = \"/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"react-voice-recorder/dist/index.css\";\nimport useRecorder from \"./components/useRecorder\";\nimport { useCallback } from \"react\";\nimport { _blobToFile, _createUpdate, _addFileToUpdate } from \"./utils/add-voice\";\nimport { getCurrentItemID, getVoiceMessagesHistory } from \"./utils/on-load\";\nimport { MainScreen } from \"./components/MainScreen\";\n\nconst AppSolution = ({\n  mondayInstance\n}) => {\n  // const [settings, setSettings] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [currentItemId, setCurrentItemId] = useState(null);\n  const [messagesHistory, setMessagesHistory] = useState(null);\n  let [audioURL, isRecording, startRecording, stopRecording, blob] = useRecorder();\n\n  const _handleBlob = useCallback(async blob => {\n    try {\n      const file = _blobToFile(blob, `voice_description_${messagesHistory.length + 1}`);\n\n      const newUpdateId = await _createUpdate(mondayInstance, currentItemId);\n      await _addFileToUpdate(newUpdateId, file);\n    } catch (error) {}\n  }, [currentItemId, mondayInstance, messagesHistory]);\n\n  useEffect(() => {\n    if (blob) {\n      debugger;\n\n      _handleBlob(blob);\n    }\n  }, [blob, _handleBlob]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const idResponse = await getCurrentItemID(mondayInstance);\n      setCurrentItemId(idResponse);\n      const messagesHistory = await getVoiceMessagesHistory(mondayInstance, idResponse);\n      if (messagesHistory) setMessagesHistory([...messagesHistory]);\n    };\n\n    fetchData();\n  }, [mondayInstance]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), userName && `Hello, ${userName}`, /*#__PURE__*/React.createElement(\"audio\", {\n    src: audioURL,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startRecording,\n    disabled: isRecording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"start recording\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: stopRecording,\n    disabled: !isRecording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"stop recording\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, messagesHistory && messagesHistory.map((message, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, `${message.creatorName} ${i + 1}`)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    src: message.assetSrc,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default AppSolution;","map":{"version":3,"sources":["/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js"],"names":["React","useEffect","useState","useRecorder","useCallback","_blobToFile","_createUpdate","_addFileToUpdate","getCurrentItemID","getVoiceMessagesHistory","MainScreen","AppSolution","mondayInstance","userName","setUserName","currentItemId","setCurrentItemId","messagesHistory","setMessagesHistory","audioURL","isRecording","startRecording","stopRecording","blob","_handleBlob","file","length","newUpdateId","error","fetchData","idResponse","display","map","message","i","color","creatorName","assetSrc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"react-voice-recorder/dist/index.css\";\nimport useRecorder from \"./components/useRecorder\";\nimport { useCallback } from \"react\";\nimport {\n  _blobToFile,\n  _createUpdate,\n  _addFileToUpdate,\n} from \"./utils/add-voice\";\nimport { getCurrentItemID, getVoiceMessagesHistory } from \"./utils/on-load\";\nimport { MainScreen } from \"./components/MainScreen\";\n\nconst AppSolution = ({ mondayInstance }) => {\n  // const [settings, setSettings] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [currentItemId, setCurrentItemId] = useState(null);\n  const [messagesHistory, setMessagesHistory] = useState(null);\n  let [audioURL, isRecording, startRecording, stopRecording, blob] =\n    useRecorder();\n\n  const _handleBlob = useCallback(\n    async (blob) => {\n      try {\n        const file = _blobToFile(\n          blob,\n          `voice_description_${messagesHistory.length + 1}`\n        );\n        const newUpdateId = await _createUpdate(mondayInstance, currentItemId);\n        await _addFileToUpdate(newUpdateId, file);\n      } catch (error) {}\n    },\n    [currentItemId, mondayInstance, messagesHistory]\n  );\n\n  useEffect(() => {\n    if (blob) {\n      debugger;\n      _handleBlob(blob);\n    }\n  }, [blob, _handleBlob]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const idResponse = await getCurrentItemID(mondayInstance);\n      setCurrentItemId(idResponse);\n      const messagesHistory = await getVoiceMessagesHistory(\n        mondayInstance,\n        idResponse\n      );\n      if (messagesHistory) setMessagesHistory([...messagesHistory]);\n    };\n    fetchData();\n  }, [mondayInstance]);\n\n  return (\n    <div style = {{display:'flex'}}>\n      <MainScreen />\n      {userName && `Hello, ${userName}`}\n      <audio src={audioURL} controls />\n      <button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        stop recording\n      </button>\n      <div>\n        {messagesHistory &&\n          messagesHistory.map((message, i) => (\n            <>\n              <div>\n                <div style={{ color: \"white\" }}>\n                  {`${message.creatorName} ${i+1}`}\n                </div>\n              </div>\n              <div>\n                <audio src={message.assetSrc} controls />\n              </div>\n            </>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AppSolution;\n"]},"metadata":{},"sourceType":"module"}