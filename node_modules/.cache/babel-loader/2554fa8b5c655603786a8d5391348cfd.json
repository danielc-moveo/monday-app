{"ast":null,"code":"var _jsxFileName = \"/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport Recorder from \"react-mp3-recorder\";\nimport VideoRecorder from \"react-video-recorder\";\nconst monday = mondaySdk({\n  clientId: \"8286fbdc70dd761eb957ef68787b4511\",\n  apiToken: \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjExMzE4NzU1NywidWlkIjoyMjYwNDQ1MCwiaWFkIjoiMjAyMS0wNi0xMFQxMDowNTo1MS44NzdaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6OTE5NjAxNCwicmduIjoidXNlMSJ9.MIJ6sN_Rqnfkpfkl51eBCBQMgx_RPNvBGRXMlmTrUKs\"\n});\n\nclass AppSolution extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this._onRecordingComplete = blob => {\n      debugger;\n      console.log(\"recording\", blob);\n    };\n\n    this._onRecordingError = err => {\n      debugger;\n      console.log(\"recording error\", err);\n    };\n\n    this._blobToFile = (theBlob, fileName) => {\n      //A Blob() is almost a File() - it's just missing the two properties below which we will add\n      theBlob.lastModifiedDate = new Date();\n      theBlob.name = fileName;\n      return theBlob;\n    };\n\n    this._handleBlob = async blob => {\n      try {\n        const file = this._blobToFile(blob, \"myFileName\");\n\n        const response = await monday.get(\"context\");\n        const {\n          itemId\n        } = response.data;\n\n        const newUpdateId = this._createUpdate(itemId);\n\n        await this._addFileToUpdate(newUpdateId, file);\n      } catch (error) {}\n    };\n\n    this._createUpdate = async itemId => {\n      //query to create an update\n      // monday.api(`query { me { name } }`).then((res) => {\n      //   this.setState({ name: res.data.me.name });\n      // });\n      const response = await monday.api(`mutation {\n      create_update (item_id: ${itemId}, body: \"This update is for a new video\") {\n      id\n      }\n      }`);\n      const {\n        create_update: {\n          id\n        }\n      } = response.data;\n      debugger;\n      return id;\n    };\n\n    this._addFileToUpdate = async (newUpdateId, file) => {\n      const response = await monday.api(`mutation {\n      add_file_to_update (update_id: ${parseInt(newUpdateId)}, file: ${file}) {\n      id\n      }\n      }\n`);\n      debugger;\n    };\n\n    this.state = {\n      settings: {},\n      context: {},\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n    });\n    monday.api(`query { me { name } }`).then(res => {\n      this.setState({\n        name: res.data.me.name\n      });\n    });\n  }\n\n  render() {\n    // const newFile = this._blobToFile(\"\", \"myNewFileName\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        background: this.state.settings.background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, \"Hello, \", this.state.name, \"!\", /*#__PURE__*/React.createElement(VideoRecorder, {\n      onRecordingComplete: videoBlob => {\n        // Do something with the video...\n        this._handleBlob(videoBlob);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default AppSolution;","map":{"version":3,"sources":["/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js"],"names":["React","mondaySdk","Recorder","VideoRecorder","monday","clientId","apiToken","AppSolution","Component","constructor","props","_onRecordingComplete","blob","console","log","_onRecordingError","err","_blobToFile","theBlob","fileName","lastModifiedDate","Date","name","_handleBlob","file","response","get","itemId","data","newUpdateId","_createUpdate","_addFileToUpdate","error","api","create_update","id","parseInt","state","settings","context","componentDidMount","listen","res","setState","then","me","render","background","videoBlob"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport Recorder from \"react-mp3-recorder\";\nimport VideoRecorder from \"react-video-recorder\";\n\nconst monday = mondaySdk({\n  clientId: \"8286fbdc70dd761eb957ef68787b4511\",\n  apiToken:\n    \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjExMzE4NzU1NywidWlkIjoyMjYwNDQ1MCwiaWFkIjoiMjAyMS0wNi0xMFQxMDowNTo1MS44NzdaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6OTE5NjAxNCwicmduIjoidXNlMSJ9.MIJ6sN_Rqnfkpfkl51eBCBQMgx_RPNvBGRXMlmTrUKs\",\n});\n\nclass AppSolution extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {},\n      context: {},\n      name: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    monday.listen(\"settings\", (res) => {\n      this.setState({ settings: res.data });\n    });\n\n    monday.api(`query { me { name } }`).then((res) => {\n      this.setState({ name: res.data.me.name });\n    });\n  }\n  debugger;\n\n  _onRecordingComplete = (blob) => {\n    debugger;\n    console.log(\"recording\", blob);\n  };\n\n  _onRecordingError = (err) => {\n    debugger;\n    console.log(\"recording error\", err);\n  };\n\n  _blobToFile = (theBlob, fileName) => {\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    theBlob.lastModifiedDate = new Date();\n    theBlob.name = fileName;\n    return theBlob;\n  };\n  _handleBlob = async (blob) => {\n    try {\n      const file = this._blobToFile(blob, \"myFileName\");\n      const response = await monday.get(\"context\");\n      const { itemId } = response.data;\n      const newUpdateId = this._createUpdate(itemId);\n      await this._addFileToUpdate(newUpdateId, file);\n    } catch (error) {}\n  };\n\n  _createUpdate = async (itemId) => {\n    //query to create an update\n\n    // monday.api(`query { me { name } }`).then((res) => {\n    //   this.setState({ name: res.data.me.name });\n    // });\n\n    const response = await monday.api(`mutation {\n      create_update (item_id: ${itemId}, body: \"This update is for a new video\") {\n      id\n      }\n      }`);\n    const {\n      create_update: { id },\n    } = response.data;\n    debugger\n    return id;\n  };\n\n  _addFileToUpdate = async (newUpdateId, file) => {\n    \n    const response = await monday.api(`mutation {\n      add_file_to_update (update_id: ${parseInt(newUpdateId)}, file: ${file}) {\n      id\n      }\n      }\n`);\n    debugger;\n  };\n\n  render() {\n    // const newFile = this._blobToFile(\"\", \"myNewFileName\");\n\n    return (\n      <div\n        className=\"App\"\n        style={{ background: this.state.settings.background }}\n      >\n        Hello, {this.state.name}!\n        {/* <Recorder\n          onRecordingComplete={this._onRecordingComplete}\n          onRecordingError={this._onRecordingError}\n        /> */}\n        <VideoRecorder\n          onRecordingComplete={(videoBlob) => {\n            // Do something with the video...\n            this._handleBlob(videoBlob);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AppSolution;\n"]},"metadata":{},"sourceType":"module"}