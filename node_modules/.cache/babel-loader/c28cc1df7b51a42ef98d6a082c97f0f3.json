{"ast":null,"code":"var _jsxFileName = \"/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\"; // import Recorder from \"react-mp3-recorder\";\n\nimport VideoRecorder from \"react-video-recorder\";\nimport axios from \"axios\";\nimport { Recorder } from \"react-voice-recorder\";\nimport \"react-voice-recorder/dist/index.css\";\nconst apiToken = \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjExMzE4NzU1NywidWlkIjoyMjYwNDQ1MCwiaWFkIjoiMjAyMS0wNi0xMFQxMDowNTo1MS44NzdaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6OTE5NjAxNCwicmduIjoidXNlMSJ9.MIJ6sN_Rqnfkpfkl51eBCBQMgx_RPNvBGRXMlmTrUKs\";\nconst monday = mondaySdk({\n  clientId: \"4e35caa6c69460ae555a974852334926\",\n  apiToken\n});\n\nclass AppSolution extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this._onRecordingComplete = blob => {\n      debugger;\n      console.log(\"recording\", blob);\n    };\n\n    this._onRecordingError = err => {\n      debugger;\n      console.log(\"recording error\", err);\n    };\n\n    this._blobToFile = (theBlob, fileName) => {\n      theBlob.lastModifiedDate = new Date();\n      theBlob.name = fileName;\n      const newFile = new File([theBlob], fileName, {\n        type: theBlob.type\n      });\n      return newFile;\n    };\n\n    this._handleBlob = async blob => {\n      try {\n        const file = this._blobToFile(blob, \"myFileName\");\n\n        const response = await monday.get(\"context\");\n        const {\n          itemId,\n          boardId\n        } = response.data;\n        const newUpdateId = await this._createUpdate(itemId);\n        const newColumnId = await this._createColumn(boardId, \"Description\"); // await this._addFileToUpdate(newUpdateId, file);\n\n        await this._addFileToColumn(itemId, newColumnId, file);\n      } catch (error) {}\n    };\n\n    this._createUpdate = async itemId => {\n      //query to create an update\n      // monday.api(`query { me { name } }`).then((res) => {\n      //   this.setState({ name: res.data.me.name });\n      // });\n      const response = await monday.api(`mutation {\n      create_update (item_id: ${itemId}, body: \"This update is for a new video\") {\n      id\n      }\n      }`);\n      const {\n        id\n      } = response.data.create_update;\n      return id;\n    };\n\n    this._createColumn = async (boardId, columnName) => {\n      //query to create an update\n      // monday.api(`query { me { name } }`).then((res) => {\n      //   this.setState({ name: res.data.me.name });\n      // });\n      debugger;\n      const response = await monday.api(`mutation {\n      create_column (board_id: ${boardId}, title: ${columnName}, column_type: file) {\n      id\n      }\n      }`);\n      debugger;\n      const {\n        id\n      } = response.data.create_column;\n      debugger;\n      return id;\n    };\n\n    this._addFileToColumn = async (itemId, newColumnId, file) => {\n      // const response = await monday.api(`mutation {\n      //   add_file_to_column (item_id: ${itemId}, column_id: ${newColumnId}, file: ${file}) {\n      //   id\n      //   }\n      //   }`);\n      // debugger;\n      const formData = new FormData();\n      formData.append(\"variables[file]\", file, \"filename.webm\");\n      const noVariableQuery = `mutation addFile($file: File!) {  add_file_to_column (item_id: ${itemId}, column_id: ${newColumnId},file: $file) {id}}`;\n      formData.append(\"query\", noVariableQuery);\n      debugger;\n\n      try {\n        const res = await axios.post(\"https://api.monday.com/v2/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: apiToken\n          }\n        });\n        debugger;\n      } catch (error) {\n        debugger; //internal 500 server error\n      }\n    };\n\n    this._addFileToUpdate = async (newUpdateId, file) => {\n      const blob = new Blob([\"Hello World!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      const newFile = new File([blob], \"fileName\", {\n        type: blob.type\n      }); // let query = `mutation {\n      //   add_file_to_update (update_id: ${newUpdateId}, file: ${newFile}) {\n      //   id\n      //   }\n      //   }`;\n      // const query = `mutation add_file($update_id:Int!, $file: File!) {\n      //   add_file_to_update(update_id: $update_id, file: $file) {\n      //   id\n      //   }\n      //   }\n      //   `;\n      // const variables = {\n      //   update_ids: newUpdateId,\n      //   file: newFile,\n      // };\n\n      const formData = new FormData();\n      formData.append(\"variables[file]\", file, \"filename.webm\");\n      const noVariableQuery = `mutation addFile($file: File!) {add_file_to_update (update_id: ${newUpdateId}, file: $file) {id}}`;\n      formData.append(\"query\", noVariableQuery);\n\n      try {\n        const res = await axios.post(\"https://api.monday.com/v2/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: apiToken\n          }\n        });\n      } catch (error) {\n        debugger; //internal 500 server error\n      } // fetch(\"https://api.monday.com/v2\", {\n      //   method: \"post\",\n      //   headers: {\n      //     \"Content-Type\": \"multipart/form-data\",\n      //     Authorization: apiToken,\n      //   },\n      //   body: JSON.stringify({\n      //     query: query,\n      //   }),\n      // })\n      //   .then((res) => res.json())\n      //   .then((res) => {\n      //     debugger;\n      //     console.log(JSON.stringify(res, null, 2));\n      //   });\n      // await axios\n      //   .post(\"https://api.monday.com/v2\", {\n      //     headers: {\n      //       // \"Content-Type\": \"multipart/form-data\",\n      //       Authorization: apiToken,\n      //     },\n      //     method: \"post\",\n      //     data: {\n      //       query: `mutation {\n      //     add_file_to_update (update_id: Int!, $file: File!) {\n      //     id\n      //     }\n      //     }`,\n      //       variables: {\n      //         update_id: newUpdateId,\n      //         $file: JSON.stringify(file),\n      //       },\n      //     },\n      //   })\n      //   .then((result) => {\n      //     debugger;\n      //     console.log(result.data);\n      //   })\n      //   .catch(function (error) {\n      //     debugger;\n      //     console.log(error);\n      //   });\n\n\n      const config = {\n        headers: {\n          Authorization: apiToken,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }; // try {\n      //   const response = await axios.post(\"https://api.monday.com/v2/file\", file, config);\n      // } catch (error) {\n    };\n\n    this.state = {\n      settings: {},\n      context: {},\n      name: \"\",\n      audioDetails: {\n        url: null,\n        blob: null,\n        chunks: null,\n        duration: {\n          h: null,\n          m: null,\n          s: null\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n    });\n    monday.api(`query { me { name } }`).then(res => {\n      this.setState({\n        name: res.data.me.name\n      });\n    });\n  }\n\n  handleAudioStop(data) {\n    console.log(data);\n    this.setState({\n      audioDetails: data\n    });\n  }\n\n  handleAudioUpload(file) {\n    debugger;\n    console.log(file);\n  }\n\n  handleReset() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: null,\n        m: null,\n        s: null\n      }\n    };\n    this.setState({\n      audioDetails: reset\n    });\n  }\n\n  render() {\n    // const newFile = this._blobToFile(\"\", \"myNewFileName\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        background: this.state.settings.background,\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }\n    }, \"Hello, \", this.state.name, \"!\", /*#__PURE__*/React.createElement(Recorder, {\n      record: true,\n      title: \"New recording\",\n      audioURL: this.state.audioDetails.url,\n      showUIAudio: true,\n      handleAudioStop: data => this.handleAudioStop(data),\n      handleOnChange: value => this.handleOnChange(value, \"firstname\"),\n      handleAudioUpload: data => this.handleAudioUpload(data),\n      handleRest: () => this.handleRest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default AppSolution;","map":{"version":3,"sources":["/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js"],"names":["React","mondaySdk","VideoRecorder","axios","Recorder","apiToken","monday","clientId","AppSolution","Component","constructor","props","_onRecordingComplete","blob","console","log","_onRecordingError","err","_blobToFile","theBlob","fileName","lastModifiedDate","Date","name","newFile","File","type","_handleBlob","file","response","get","itemId","boardId","data","newUpdateId","_createUpdate","newColumnId","_createColumn","_addFileToColumn","error","api","id","create_update","columnName","create_column","formData","FormData","append","noVariableQuery","res","post","headers","Authorization","_addFileToUpdate","Blob","config","state","settings","context","audioDetails","url","chunks","duration","h","m","s","componentDidMount","listen","setState","then","me","handleAudioStop","handleAudioUpload","handleReset","reset","render","background","margin","value","handleOnChange","handleRest"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\n// import Recorder from \"react-mp3-recorder\";\nimport VideoRecorder from \"react-video-recorder\";\nimport axios from \"axios\";\nimport { Recorder } from \"react-voice-recorder\";\nimport \"react-voice-recorder/dist/index.css\";\n\nconst apiToken =\n  \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjExMzE4NzU1NywidWlkIjoyMjYwNDQ1MCwiaWFkIjoiMjAyMS0wNi0xMFQxMDowNTo1MS44NzdaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6OTE5NjAxNCwicmduIjoidXNlMSJ9.MIJ6sN_Rqnfkpfkl51eBCBQMgx_RPNvBGRXMlmTrUKs\";\n\nconst monday = mondaySdk({\n  clientId: \"4e35caa6c69460ae555a974852334926\",\n  apiToken,\n});\nclass AppSolution extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      settings: {},\n      context: {},\n      name: \"\",\n\n      audioDetails : {\n        url: null,\n        blob: null,\n        chunks: null,\n        duration: {\n        h: null,\n        m: null,\n        s: null,\n        }\n        }\n    };\n  }\n\n  componentDidMount() {\n    // TODO: set up event listeners\n    monday.listen(\"settings\", (res) => {\n      this.setState({ settings: res.data });\n    });\n\n    monday.api(`query { me { name } }`).then((res) => {\n      this.setState({ name: res.data.me.name });\n    });\n  }\n\n  _onRecordingComplete = (blob) => {\n    debugger;\n    console.log(\"recording\", blob);\n  };\n\n  _onRecordingError = (err) => {\n    debugger;\n    console.log(\"recording error\", err);\n  };\n\n  _blobToFile = (theBlob, fileName) => {\n    theBlob.lastModifiedDate = new Date();\n    theBlob.name = fileName;\n    const newFile = new File([theBlob], fileName, {\n      type: theBlob.type,\n    });\n\n    return newFile;\n  };\n  _handleBlob = async (blob) => {\n    try {\n      const file = this._blobToFile(blob, \"myFileName\");\n      const response = await monday.get(\"context\");\n      const { itemId, boardId } = response.data;\n      const newUpdateId = await this._createUpdate(itemId);\n      const newColumnId = await this._createColumn(boardId, \"Description\");\n\n      // await this._addFileToUpdate(newUpdateId, file);\n      await this._addFileToColumn(itemId, newColumnId, file);\n    } catch (error) {}\n  };\n\n  _createUpdate = async (itemId) => {\n    //query to create an update\n\n    // monday.api(`query { me { name } }`).then((res) => {\n    //   this.setState({ name: res.data.me.name });\n    // });\n\n    const response = await monday.api(`mutation {\n      create_update (item_id: ${itemId}, body: \"This update is for a new video\") {\n      id\n      }\n      }`);\n\n    const { id } = response.data.create_update;\n    return id;\n  };\n\n  _createColumn = async (boardId, columnName) => {\n    //query to create an update\n\n    // monday.api(`query { me { name } }`).then((res) => {\n    //   this.setState({ name: res.data.me.name });\n    // });\n    debugger;\n    const response = await monday.api(`mutation {\n      create_column (board_id: ${boardId}, title: ${columnName}, column_type: file) {\n      id\n      }\n      }`);\n    debugger;\n    const { id } = response.data.create_column;\n    debugger;\n    return id;\n  };\n\n  _addFileToColumn = async (itemId, newColumnId, file) => {\n    // const response = await monday.api(`mutation {\n    //   add_file_to_column (item_id: ${itemId}, column_id: ${newColumnId}, file: ${file}) {\n    //   id\n    //   }\n    //   }`);\n    // debugger;\n\n    const formData = new FormData();\n    formData.append(\"variables[file]\", file, \"filename.webm\");\n\n    const noVariableQuery = `mutation addFile($file: File!) {  add_file_to_column (item_id: ${itemId}, column_id: ${newColumnId},file: $file) {id}}`;\n    formData.append(\"query\", noVariableQuery);\n\n    debugger;\n    try {\n      const res = await axios.post(\"https://api.monday.com/v2/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: apiToken,\n        },\n      });\n      debugger;\n    } catch (error) {\n      debugger;\n      //internal 500 server error\n    }\n  };\n\n  _addFileToUpdate = async (newUpdateId, file) => {\n    const blob = new Blob([\"Hello World!\"], {\n      type: \"text/plain;charset=utf-8\",\n    });\n    const newFile = new File([blob], \"fileName\", {\n      type: blob.type,\n    });\n    // let query = `mutation {\n    //   add_file_to_update (update_id: ${newUpdateId}, file: ${newFile}) {\n    //   id\n    //   }\n    //   }`;\n\n    // const query = `mutation add_file($update_id:Int!, $file: File!) {\n    //   add_file_to_update(update_id: $update_id, file: $file) {\n    //   id\n    //   }\n    //   }\n\n    //   `;\n\n    // const variables = {\n    //   update_ids: newUpdateId,\n    //   file: newFile,\n    // };\n    const formData = new FormData();\n    formData.append(\"variables[file]\", file, \"filename.webm\");\n\n    const noVariableQuery = `mutation addFile($file: File!) {add_file_to_update (update_id: ${newUpdateId}, file: $file) {id}}`;\n    formData.append(\"query\", noVariableQuery);\n\n    try {\n      const res = await axios.post(\"https://api.monday.com/v2/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: apiToken,\n        },\n      });\n    } catch (error) {\n      debugger;\n      //internal 500 server error\n    }\n\n    // fetch(\"https://api.monday.com/v2\", {\n    //   method: \"post\",\n    //   headers: {\n    //     \"Content-Type\": \"multipart/form-data\",\n    //     Authorization: apiToken,\n    //   },\n    //   body: JSON.stringify({\n    //     query: query,\n    //   }),\n    // })\n    //   .then((res) => res.json())\n    //   .then((res) => {\n    //     debugger;\n    //     console.log(JSON.stringify(res, null, 2));\n    //   });\n\n    // await axios\n    //   .post(\"https://api.monday.com/v2\", {\n    //     headers: {\n    //       // \"Content-Type\": \"multipart/form-data\",\n    //       Authorization: apiToken,\n    //     },\n    //     method: \"post\",\n    //     data: {\n    //       query: `mutation {\n    //     add_file_to_update (update_id: Int!, $file: File!) {\n    //     id\n    //     }\n    //     }`,\n    //       variables: {\n    //         update_id: newUpdateId,\n    //         $file: JSON.stringify(file),\n    //       },\n    //     },\n    //   })\n    //   .then((result) => {\n    //     debugger;\n    //     console.log(result.data);\n    //   })\n    //   .catch(function (error) {\n    //     debugger;\n    //     console.log(error);\n    //   });\n\n    const config = {\n      headers: {\n        Authorization: apiToken,\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    // try {\n    //   const response = await axios.post(\"https://api.monday.com/v2/file\", file, config);\n\n    // } catch (error) {\n  };\n\n  handleAudioStop(data) {\n    console.log(data);\n    this.setState({ audioDetails: data });\n  }\n  handleAudioUpload(file) {\n    debugger\n    console.log(file);\n  }\n  handleReset() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: null,\n        m: null,\n        s: null,\n      },\n    };\n    this.setState({ audioDetails: reset });\n  }\n\n  render() {\n    // const newFile = this._blobToFile(\"\", \"myNewFileName\");\n\n    return (\n      <div\n        className=\"App\"\n        style={{ background: this.state.settings.background, margin: \"auto\" }}\n      >\n        Hello, {this.state.name}!\n        {/* <Recorder\n          onRecordingComplete={this._onRecordingComplete}\n          onRecordingError={this._onRecordingError}\n        /> */}\n        {/* <VideoRecorder\n          onRecordingComplete={(videoBlob) => {\n            // Do something with the video...\n            this._handleBlob(videoBlob);\n          }}\n          constraints={{\n            video: false,\n            audio: true,\n          }}\n          countdownTime={2000}\n        /> */}\n        <Recorder\n          record={true}\n          title={\"New recording\"}\n          audioURL={this.state.audioDetails.url}\n          showUIAudio\n          handleAudioStop={(data) => this.handleAudioStop(data)}\n          handleOnChange={(value) => this.handleOnChange(value, \"firstname\")}\n          handleAudioUpload={(data) => this.handleAudioUpload(data)}\n          handleRest={() => this.handleRest()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AppSolution;\n"]},"metadata":{},"sourceType":"module"}