{"ast":null,"code":"\"use strict\";\n\nconst ffmpeg = require(\"ffmpeg.js/ffmpeg-mp4\");\n\nmodule.exports = webmData => {\n  let stderr = \"\";\n  return ffmpeg({\n    MEMFS: [{\n      name: \"input.webm\",\n      data: Uint8Array.from(webmData)\n    }],\n    arguments: [\"-i\", \"input.webm\", \"-codec\", \"copy\", \"-strict\", \"-2\", \"output.mp4\"],\n    print: () => {},\n    printErr: data => {\n      stderr += data;\n    },\n    onExit: code => {\n      if (code !== 0) {\n        throw new Error(`Conversion error: ${stderr}`);\n      }\n    }\n  }).MEMFS[0].data.buffer;\n};","map":{"version":3,"sources":["/Users/skills/team-task-item-view/quickstart-react/node_modules/webm-to-mp4/index.js"],"names":["ffmpeg","require","module","exports","webmData","stderr","MEMFS","name","data","Uint8Array","from","arguments","print","printErr","onExit","code","Error","buffer"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,sBAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,IAAI;AAC5B,MAAIC,MAAM,GAAG,EAAb;AAEA,SAAOL,MAAM,CAAC;AACbM,IAAAA,KAAK,EAAE,CAAC;AACPC,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,IAAI,EAAEC,UAAU,CAACC,IAAX,CAAgBN,QAAhB;AAFC,KAAD,CADM;AAKbO,IAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,YAAP,EAAqB,QAArB,EAA+B,MAA/B,EAAuC,SAAvC,EAAkD,IAAlD,EAAwD,YAAxD,CALE;AAMbC,IAAAA,KAAK,EAAE,MAAM,CAAE,CANF;AAObC,IAAAA,QAAQ,EAAEL,IAAI,IAAI;AACjBH,MAAAA,MAAM,IAAIG,IAAV;AACA,KATY;AAUbM,IAAAA,MAAM,EAAEC,IAAI,IAAI;AACf,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACf,cAAM,IAAIC,KAAJ,CAAW,qBAAoBX,MAAO,EAAtC,CAAN;AACA;AACD;AAdY,GAAD,CAAN,CAeJC,KAfI,CAeE,CAfF,EAeKE,IAfL,CAeUS,MAfjB;AAgBA,CAnBD","sourcesContent":["\"use strict\"\n\nconst ffmpeg = require(\"ffmpeg.js/ffmpeg-mp4\")\n\nmodule.exports = webmData => {\n\tlet stderr = \"\"\n\n\treturn ffmpeg({\n\t\tMEMFS: [{\n\t\t\tname: \"input.webm\",\n\t\t\tdata: Uint8Array.from(webmData)\n\t\t}],\n\t\targuments: [\"-i\", \"input.webm\", \"-codec\", \"copy\", \"-strict\", \"-2\", \"output.mp4\"],\n\t\tprint: () => {},\n\t\tprintErr: data => {\n\t\t\tstderr += data\n\t\t},\n\t\tonExit: code => {\n\t\t\tif (code !== 0) {\n\t\t\t\tthrow new Error(`Conversion error: ${stderr}`)\n\t\t\t}\n\t\t}\n\t}).MEMFS[0].data.buffer\n}\n"]},"metadata":{},"sourceType":"script"}