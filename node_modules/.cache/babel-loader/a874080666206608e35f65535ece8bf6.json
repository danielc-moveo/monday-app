{"ast":null,"code":"var _jsxFileName = \"/Users/move0/Desktop/monday-app/src/components/RecordingPlayer.jsx\";\nimport React, { useRef, useState } from \"react\";\nimport { Colors } from \"../ui/Colors\";\nimport styled from \"styled-components\";\nimport { IconBtn } from \"../ui/Layouts\";\nimport { ReactComponent as TrashIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../ui/icons/Trash.svg\";\nimport { ReactComponent as RecordIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../ui/icons/Record.svg\";\nimport { ReactComponent as PlayIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../ui/icons/Play.svg\";\nimport { ReactComponent as PauseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../ui/icons/Pause.svg\";\nconst PlayerContainer = styled.div`\n  background-color: ${Colors.lightGrey};\n  width: 70%;\n  height: 65px;\n  border-radius: 50px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst AudioContainer = styled.div``;\nexport const RecordingPlayer = ({\n  stopRecord,\n  deleteRecord,\n  isRecording,\n  src,\n  blob\n}) => {\n  const [isReplay, setIsReplay] = useState(false);\n  const audioRef = useRef();\n\n  const play = () => {\n    setIsReplay(true);\n    audioRef.current.play();\n  };\n\n  const pause = () => {\n    setIsReplay(false);\n    audioRef.current.pause();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AudioContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    src: src,\n    controls: true,\n    ref: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconBtn, {\n    onClick: deleteRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), isRecording ? /*#__PURE__*/React.createElement(IconBtn, {\n    onClick: stopRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RecordIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(IconBtn, {\n    onClick: play,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PlayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/move0/Desktop/monday-app/src/components/RecordingPlayer.jsx"],"names":["React","useRef","useState","Colors","styled","IconBtn","PlayerContainer","div","lightGrey","AudioContainer","RecordingPlayer","stopRecord","deleteRecord","isRecording","src","blob","isReplay","setIsReplay","audioRef","play","current","pause"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,eAAxB;;;;;AAMA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAI;sBACbJ,MAAM,CAACK,SAAU;;;;;;CADvC;AAQA,MAAMC,cAAc,GAAGL,MAAM,CAACG,GAAI,EAAlC;AACA,OAAO,MAAMG,eAAe,GAAG,CAAC;AAC9BC,EAAAA,UAD8B;AAE9BC,EAAAA,YAF8B;AAG9BC,EAAAA,WAH8B;AAI9BC,EAAAA,GAJ8B;AAK9BC,EAAAA;AAL8B,CAAD,KAMzB;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMgB,QAAQ,GAAGjB,MAAM,EAAvB;;AAEA,QAAMkB,IAAI,GAAG,MAAM;AACjBF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,IAAAA,QAAQ,CAACE,OAAT,CAAiBD,IAAjB;AACD,GAHD;;AAIA,QAAME,KAAK,GAAG,MAAM;AAClBJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACD,GAHD;;AAKA,sBACE,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAEP,GAAZ;AAAiB,IAAA,QAAQ,MAAzB;AAA0B,IAAA,GAAG,EAAEI,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEN,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGC,WAAW,gBACV,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEF,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADU,gBAKV,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEQ,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATJ,CAJF,CADF;AAqBD,CAxCM","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Colors } from \"../ui/Colors\";\nimport styled from \"styled-components\";\nimport { IconBtn } from \"../ui/Layouts\";\nimport { ReactComponent as TrashIcon } from \"../ui/icons/Trash.svg\";\nimport { ReactComponent as RecordIcon } from \"../ui/icons/Record.svg\";\nimport { ReactComponent as PlayIcon } from \"../ui/icons/Play.svg\";\nimport { ReactComponent as PauseIcon } from \"../ui/icons/Pause.svg\";\n\nconst PlayerContainer = styled.div`\n  background-color: ${Colors.lightGrey};\n  width: 70%;\n  height: 65px;\n  border-radius: 50px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst AudioContainer = styled.div``;\nexport const RecordingPlayer = ({\n  stopRecord,\n  deleteRecord,\n  isRecording,\n  src,\n  blob,\n}) => {\n  const [isReplay, setIsReplay] = useState(false);\n  const audioRef = useRef();\n\n  const play = () => {\n    setIsReplay(true);\n    audioRef.current.play();\n  };\n  const pause = () => {\n    setIsReplay(false);\n    audioRef.current.pause();\n  };\n\n  return (\n    <>\n      <AudioContainer>\n        <audio src={src} controls ref={audioRef} />\n      </AudioContainer>\n      <PlayerContainer>\n        <IconBtn onClick={deleteRecord}>\n          <TrashIcon />\n        </IconBtn>\n        {isRecording ? (\n          <IconBtn onClick={stopRecord}>\n            <RecordIcon />\n          </IconBtn>\n        ) : (\n          <IconBtn onClick={play}>\n            <PlayIcon />\n          </IconBtn>\n        )}\n      </PlayerContainer>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}