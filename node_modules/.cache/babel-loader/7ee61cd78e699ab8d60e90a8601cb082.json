{"ast":null,"code":"var _jsxFileName = \"/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"react-voice-recorder/dist/index.css\";\nimport useRecorder from \"./components/useRecorder\";\nimport { useCallback } from \"react\";\nimport { _blobToFile, _createUpdate, _addFileToUpdate } from \"./utils/helper\";\nimport { mondayInstance } from \"./api/monday\";\n\nconst AppSolution = () => {\n  // const [settings, setSettings] = useState(null);\n  const [userName, setUserName] = useState(null);\n  let [audioURL, isRecording, startRecording, stopRecording, blob] = useRecorder();\n\n  const _handleBlob = useCallback(async blob => {\n    try {\n      debugger;\n\n      const file = _blobToFile(blob, \"myFileName\");\n\n      const mondayContextResponse = await mondayInstance.get(\"context\");\n      const {\n        itemId,\n        boardId\n      } = mondayContextResponse.data; // const updates = await getUpdates();\n\n      const newUpdateId = await _createUpdate(itemId); // const newColumnId = await _createColumn(boardId, \"Description\");\n\n      await _addFileToUpdate(newUpdateId, file); // await _addFileToColumn(itemId, newColumnId, file);\n    } catch (error) {}\n  }, []);\n\n  useEffect(() => {\n    // monday.listen(\"settings\", (res) => {\n    //   setSettings(res.data);\n    // });\n    const query = ` query {items {\n      name\n      updates {\n        id\n        body\n        assets {\n          id\n          public_url\n        }\n        \n      }\n    }}`;\n    mondayInstance.api(query).then(res => {// setUserName(res.data.me.name);\n    });\n\n    if (blob) {\n      _handleBlob(blob);\n    }\n  }, [blob, _handleBlob]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, userName && `Hello, ${userName}`, /*#__PURE__*/React.createElement(\"audio\", {\n    src: audioURL,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startRecording,\n    disabled: isRecording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"start recording\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: stopRecording,\n    disabled: !isRecording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"stop recording\"));\n};\n\nexport default AppSolution;","map":{"version":3,"sources":["/Users/skills/team-task-item-view/quickstart-react/src/AppSolution.js"],"names":["React","useEffect","useState","useRecorder","useCallback","_blobToFile","_createUpdate","_addFileToUpdate","mondayInstance","AppSolution","userName","setUserName","audioURL","isRecording","startRecording","stopRecording","blob","_handleBlob","file","mondayContextResponse","get","itemId","boardId","data","newUpdateId","error","query","api","then","res"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAO,qCAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,gBAArC,QAA6D,gBAA7D;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAGA,MAAMC,WAAW,GAAG,MAAM;AACxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AAEA,MAAI,CAACU,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,IAAvD,IACFb,WAAW,EADb;;AAGA,QAAMc,WAAW,GAAGb,WAAW,CAAC,MAAOY,IAAP,IAAgB;AAC9C,QAAI;AACF;;AACA,YAAME,IAAI,GAAGb,WAAW,CAACW,IAAD,EAAO,YAAP,CAAxB;;AACA,YAAMG,qBAAqB,GAAG,MAAMX,cAAc,CAACY,GAAf,CAAmB,SAAnB,CAApC;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAsBH,qBAAqB,CAACI,IAAlD,CAJE,CAKF;;AAEA,YAAMC,WAAW,GAAG,MAAMlB,aAAa,CAACe,MAAD,CAAvC,CAPE,CAQF;;AAEA,YAAMd,gBAAgB,CAACiB,WAAD,EAAcN,IAAd,CAAtB,CAVE,CAWF;AACD,KAZD,CAYE,OAAOO,KAAP,EAAc,CAAE;AACnB,GAd8B,EAc5B,EAd4B,CAA/B;;AAgBAxB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AAEA,UAAMyB,KAAK,GAAI;;;;;;;;;;;OAAf;AAaAlB,IAAAA,cAAc,CAACmB,GAAf,CAAmBD,KAAnB,EAA0BE,IAA1B,CAAgCC,GAAD,IAAS,CACtC;AACD,KAFD;;AAGA,QAAIb,IAAJ,EAAU;AACRC,MAAAA,WAAW,CAACD,IAAD,CAAX;AACD;AACF,GAxBQ,EAwBN,CAACA,IAAD,EAAOC,WAAP,CAxBM,CAAT;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,IAAK,UAASA,QAAS,EADlC,eAEE;AAAO,IAAA,GAAG,EAAEE,QAAZ;AAAsB,IAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEE,cAAjB;AAAiC,IAAA,QAAQ,EAAED,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,eAME;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAgC,IAAA,QAAQ,EAAE,CAACF,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF;AAYD,CA7DD;;AA+DA,eAAeJ,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"react-voice-recorder/dist/index.css\";\nimport useRecorder from \"./components/useRecorder\";\nimport { useCallback } from \"react\";\nimport { _blobToFile, _createUpdate, _addFileToUpdate } from \"./utils/helper\";\nimport { mondayInstance } from \"./api/monday\";\n\n\nconst AppSolution = () => {\n  // const [settings, setSettings] = useState(null);\n  const [userName, setUserName] = useState(null);\n\n  let [audioURL, isRecording, startRecording, stopRecording, blob] =\n    useRecorder();\n\n  const _handleBlob = useCallback(async (blob) => {\n    try {\n      debugger;\n      const file = _blobToFile(blob, \"myFileName\");\n      const mondayContextResponse = await mondayInstance.get(\"context\");\n      const { itemId, boardId } = mondayContextResponse.data;\n      // const updates = await getUpdates();\n\n      const newUpdateId = await _createUpdate(itemId);\n      // const newColumnId = await _createColumn(boardId, \"Description\");\n\n      await _addFileToUpdate(newUpdateId, file);\n      // await _addFileToColumn(itemId, newColumnId, file);\n    } catch (error) {}\n  }, []);\n\n  useEffect(() => {\n    // monday.listen(\"settings\", (res) => {\n    //   setSettings(res.data);\n    // });\n\n    const query = ` query {items {\n      name\n      updates {\n        id\n        body\n        assets {\n          id\n          public_url\n        }\n        \n      }\n    }}`;\n\n    mondayInstance.api(query).then((res) => {\n      // setUserName(res.data.me.name);\n    });\n    if (blob) {\n      _handleBlob(blob);\n    }\n  }, [blob, _handleBlob]);\n\n  return (\n    <div className=\"App\">\n      {userName && `Hello, ${userName}`}\n      <audio src={audioURL} controls />\n      <button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        stop recording\n      </button>\n    </div>\n  );\n};\n\nexport default AppSolution;\n"]},"metadata":{},"sourceType":"module"}